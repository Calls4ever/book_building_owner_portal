{"version":3,"sources":["components/Signup.js","components/Login.js","components/Booking.js","components/BuildingCard.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","props","useState","user","setUser","className","placeholder","name","value","onChange","e","target","username","type","password","onClick","preventDefault","console","log","fetch","method","headers","accept","body","JSON","stringify","then","res","json","newUser","catch","error","toggle","Login","login","setLogin","signupToggle","setSignupToggle","message","setMessage","renderSignup","setCurrentUser","Booking","Date","booking","start_time","toLocaleDateString","end_time","confirmed","id","newBooking","currentUser","BuildingCard","bookToggle","setBookToggle","startDate","endDate","setBooking","building","src","img_url","location","myBuilding","selected","date","bookings","map","bo","App","window","alert","buildings","length","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f32d9df7.chunk.js","sourcesContent":["import { useState } from \"react\"\nconst Signup=(props)=>{\n    const [user, setUser]=useState({})\n    \n    const handleSubmit=(e)=>{\n        e.preventDefault()\n        console.log(user)\n        fetch(`http://localhost:3000/owners`, {\n            method: \"POST\",\n            headers: {\n                accept: 'application/json',\n                \"content-type\": 'application/json'\n            },\n            body: JSON.stringify({\n                name: user.name,\n                username: user.username,\n                password: user.password\n            })\n        })\n        .then(res=>res.json())\n        .then(newUser=>{\n            console.log(newUser)\n        })\n        .catch(error=>console.log(error))\n        props.toggle(e)\n    }\n    return(\n        <div className ='signup-modal'>\n            <div className='signup-modal-content'>\n                {/* <h1 className ='close'> X </h1> */}\n                <h1 className='login-header'>Sign Up</h1>\n                <form\n                className = \"login-form\"\n                >\n                    <input\n                    placeholder = 'Name'\n                    name = \"name\"\n                    value = {user.name}\n                    onChange ={(e)=>setUser({...user, name: e.target.value})}\n                    />\n                    <input\n                    placeholder = 'username please'\n                    name = \"username\"\n                    value = {user.username}\n                    onChange ={(e)=>setUser({...user, username: e.target.value})}\n                    />\n                    <input\n                    type =\"password\"\n                    name = \"password\"\n                    value = {user.password}\n                    onChange ={(e)=>setUser({...user, password: e.target.value})}\n                    placeholder = 'start typing your password'\n                    />\n                    <div>\n                        <button\n                            onClick={handleSubmit}\n                        >Sign Up</button>\n                    </div>\n                \n                </form>\n            </div>\n        </div>\n        \n    )\n\n}\nexport default Signup","\nimport { useState } from \"react\"\nimport Signup from \"./Signup\"\n\nconst Login =(props)=>{\n    const [login, setLogin] = useState({})\n    const [signupToggle, setSignupToggle]=useState(false)\n    const [message,setMessage] =useState(\"\")\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        fetch(`http://localhost:3000/owners/${login.username}`)\n        .then(res=>res.json())\n        .then(user=>{\n            if(user){\n                if(user.password===login.password){\n                    console.log('logged in')\n                    props.setCurrentUser(user)\n                    setMessage('')\n                }else{\n                    setMessage('Wrong password, try 123!')\n                }\n                \n            }else{\n                setMessage('No username found, try tsering!')\n            }\n        })\n    }\n    \n    const renderSignup =(e)=>{\n        e.preventDefault()\n        setSignupToggle(!signupToggle)\n    }\n    return(\n        <div>\n            <h1 className='login-header'>Login</h1>\n            <form\n            className = \"login-form\"\n            >\n                <input\n                placeholder = 'username please'\n                name = \"username\"\n                value = {login.username}\n                onChange ={(e)=>setLogin({...login, username: e.target.value})}\n                />\n                <input\n                type =\"password\"\n                name = \"password\"\n                value = {login.password}\n                onChange ={(e)=>setLogin({...login, password: e.target.value})}\n                placeholder = 'start typing your password'\n                />\n                <label className = 'login-message'>\n                {message}\n                </label>\n                <div>\n                    <button\n                        onClick={handleSubmit}\n                    >Log In</button>\n                    <button\n                    onClick={renderSignup}\n                    >Sign Up</button>\n                </div>\n                \n            </form>\n        {signupToggle && <Signup toggle={renderSignup}/>}\n        </div>\n        )\n}\n\nexport default Login","const Booking=(props)=>{\n    const handleApprove=()=>{\n        fetch(`http://localhost:3000/bookings/${props.booking.id}`,{\n            method: 'PATCH',\n            headers:{\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                confirmed: true\n            })\n        })\n        .then(res=>res.json())\n            .then(newBooking=>{\n                if(newBooking){\n                    fetch(`http://localhost:3000/owners/${props.currentUser.username}`)\n                    .then(res=>res.json())\n                    .then(newUser=>{\n                        if(newUser){\n                            props.setCurrentUser(newUser)\n                        }\n                    })\n                }\n            })\n    }\n    return(\n        <div>\n            <h3>From: {new Date(props.booking.start_time).toLocaleDateString()} to: {new Date(props.booking.end_time).toLocaleDateString()}\n            </h3>\n            { props.booking.confirmed\n            ?<h2 className ='booking-confirmed'>Booking confirmed</h2>\n            :(<div className = 'booking-button-div'>\n                <button className=\"approve-button\"\n                onClick={handleApprove}\n                >Approve</button>\n                <button className='deny-button'>Deny</button>\n            </div>\n            \n                )\n         }\n            \n        </div>\n    )\n}\nexport default Booking","import { useState } from \"react\"\nimport DatePicker from \"react-datepicker\";\nimport BidBook from \"./BidBook\";\nimport Booking from \"./Booking\";\nconst BuildingCard =(props)=>{\n    const [bookToggle, setBookToggle] =useState(false)\n    const [booking,setBooking] =useState({startDate: new Date(), endDate:new Date()})\n    // const [bidBook, setBidBook] =useState(false)\n    // const [booked,setBooked] =useState()\n    \n    // const handleBooking = (e)=>{\n\n    //     e.preventDefault()\n    //     console.log('clicked')\n    //     if(props.building.bookings.length>0){\n    //        let booked = props.building.bookings.find(bo=>{\n    //            if(new Date(bo.start_time)<new Date(booking.startDate)){\n    //                if(new Date(bo.end_time)> new Date(booking.startDate) ||new Date(bo.end_time)> new Date(booking.endDate)){\n    //                    return bo\n    //                }\n    //            }else if(new Date(bo.start_time)>new Date(booking.startDate)){\n    //             if(new Date(bo.start_time)< new Date(booking.endDate) || new Date(bo.end_time) < new Date(booking.endDate)){\n    //                 return bo\n    //             }\n    //            }\n    //        })\n    //        if(booked){\n    //         if(booked.confirmed){\n    //             window.alert('Already booked, try other date!')\n    //         }else{\n    //             setBooked(booked)\n    //             setBidBook(true)\n    //         }\n            \n    //        }else{\n    //         let bookingObj={\n    //             user_id: props.currentUser.id,\n    //             building_id: props.building.id,\n    //             start_time: booking.startDate,\n    //             end_time: booking.endDate,\n    //             confirmed: false\n    //         }\n    //         bookBuilding(bookingObj)\n    //        }\n           \n    //     }else{\n    //         let bookingObj={\n    //             user_id: props.currentUser.id,\n    //             building_id: props.building.id,\n    //             start_time: booking.startDate,\n    //             end_time: booking.endDate,\n    //             confirmed: false\n    //         }\n            \n    //         bookBuilding(bookingObj)\n    //     }\n        \n    // }\n    // const bookBuilding=(bookingObj, pp=0)=>{\n\n    //     let updatedPiriorityPoint=props.currentUser.piriority_point-pp\n    //     console.log(bookingObj)\n    //     fetch(`http://localhost:3000/bookings`,{\n    //         method: 'POST',\n    //         headers: {\n    //             'accept': 'application/json',\n    //             'content-type': 'application/json'\n    //         },\n    //         body: JSON.stringify(bookingObj)\n    //     })\n    //     .then(res=>res.json())\n    //     .then(bo=>{\n    //         if(bo){\n    //             fetch(`http://localhost:3000/users/${props.currentUser.id}`,{\n    //                 method: 'PATCH',\n    //                 headers: {\n    //                     'accept': 'application/json',\n    //                     'content-type': 'application/json'\n    //                 },\n    //                 body: JSON.stringify({\n    //                     piriority_point: updatedPiriorityPoint\n    //                 })\n    //             })\n    //             .then(res=>res.json())\n    //             .then(newUser=>{\n    //                 if(newUser){\n    //                     props.setCurrentUser(newUser)\n    //                     console.log(newUser)\n    //                     window.alert(\"Your booking has confirmed and we will keep you updated\")\n    //                 }\n    //             })\n    //         }else{\n    //             window.alert('System Error')\n    //         }\n            \n    //     })\n    // }\n    const renderDatePicker=()=>{\n        return(\n            <div className='date-container'>\n                <h3>From</h3>\n\n                <DatePicker \n                    selected ={booking.startDate}\n                    onChange ={(date)=>setBooking({...booking, startDate: new Date(date)})}\n                />\n                <h3>To</h3>\n                <DatePicker \n                    selected ={booking.endDate}\n                    onChange ={(date)=>setBooking({...booking, endDate:new Date(date)})}\n                />\n                <button\n                // onClick={(e)=>handleBooking(e)}\n                >Confirm</button>\n            </div> \n            )\n    }\n    return(\n        <div className='building-container'>\n            <h2>{props.building.name}</h2>\n            <img src={props.building.img_url}/>\n            <h3>Location: {props.building.location}</h3>\n            <button\n            onClick={()=>setBookToggle(!bookToggle)}\n            >{props.myBuilding?'Manage':'Book'}</button>\n            {bookToggle && renderDatePicker()}\n            {props.myBuilding && \n            <div>\n                {props.building.bookings.map(bo=><Booking \n                booking ={bo}\n                setCurrentUser ={props.setCurrentUser}\n                currentUser ={props.currentUser}\n                />)}\n            </div>\n            }\n            {/* {bidBook && <BidBook\n                user = {props.currentUser}\n                building = {props.building}\n                setBidBook ={setBidBook}\n                booked ={booked}\n                date={booking}\n                bookBuilding={bookBuilding}\n            />} */}\n        </div>\n    )\n}\nexport default BuildingCard","import './App.css';\nimport Login from './components/Login';\nimport BuildingCard from './components/BuildingCard'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [currentUser,setCurrentUser] = useState({})\n  // setTimeout(()=>{\n  //   fetch(`http://localhost:3000/owners/${currentUser.username}`)\n  //       .then(res=>res.json())\n  //       .then(user=>{\n  //           if(user){\n  //              setCurrentUser(user)\n  //             }\n  //           })\n  // },3000)\n  const renderBookings=()=>{\n    if(currentUser.buildings.length>0){\n      return(\n        <div className = 'my-building'>\n          <h1>My Buildings</h1>\n            <div className= 'building-card-container'>\n              { currentUser.buildings.map(b=><BuildingCard \n              myBuilding={true} \n              building={b}\n              key ={b.id}\n              setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n              />)}\n            </div> \n        </div>\n      )\n    }else{\n      return(\n        <div className ='my-building'>\n          <h1>My Buillings</h1>\n              <h3>You don't have any bookings! Book now from following list!\n              </h3>\n        </div>\n      ) \n    }\n  }\n  return (\n    <div className=\"App\">\n      {!currentUser.username && <Login\n      setCurrentUser={setCurrentUser}\n      />}\n      \n      {currentUser.username &&\n      <div className ='main-container'>\n        <h1>Hi, {currentUser.name}!</h1>\n        <div \n        className = 'add-building-button-div'\n        onClick={()=>window.alert('Add building Coming soon!')}\n        >\n            <h1>\n              Add Building\n            </h1>\n            <h1 id='plus'>\n              +\n            </h1>\n          </div>\n        <div>\n          {renderBookings()}\n        </div>\n      </div>\n       }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}